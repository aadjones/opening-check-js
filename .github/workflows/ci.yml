name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Backend CI
  backend-ci:
    name: Backend Tests & Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./chess_backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            chess_backend/env
          key: ${{ runner.os }}-python-${{ hashFiles('chess_backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      - name: Set up virtual environment
        run: |
          python -m venv env
          source env/bin/activate
          pip install --upgrade pip

      - name: Install dependencies
        run: |
          source env/bin/activate
          pip install -r requirements.txt
          pip install -e .

      - name: Format check (Black)
        run: |
          source env/bin/activate
          black --check .

      - name: Import sorting check (isort)
        run: |
          source env/bin/activate
          isort --check-only .

      - name: Lint (Flake8)
        run: |
          source env/bin/activate
          flake8 .

      - name: Type check (MyPy)
        run: |
          source env/bin/activate
          mypy *.py tests/*.py

      - name: Run tests
        run: |
          source env/bin/activate
          pytest --cov=. --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./chess_backend/coverage.xml
          flags: backend
          name: backend-coverage

  # Frontend CI
  frontend-ci:
    name: Frontend Tests & Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./chess_frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: chess_frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Format check (Prettier)
        run: npm run format:check

      - name: Lint (ESLint)
        run: npm run lint

      - name: Type check (TypeScript)
        run: npx tsc --noEmit

      - name: Run tests
        run: npm run test:run

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Build
        run: npm run build

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./chess_frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  # Database Migration Check
  database-check:
    name: Database Migration Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate SQL syntax
        run: |
          # Basic SQL syntax validation
          if ! command -v sqlfluff &> /dev/null; then
            pip install sqlfluff
          fi
          sqlfluff lint supabase/migrations/*.sql --dialect postgres || echo "SQL linting completed with warnings"

      - name: Check migration file structure
        run: |
          # Ensure migration files follow naming convention
          ls -la supabase/migrations/
          echo "Migration files found and accessible"

  # Security and Dependency Checks
  security-check:
    name: Security & Dependency Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Python security check (Safety)
        run: |
          pip install safety
          safety check --file chess_backend/requirements.txt

      - name: Node.js security audit
        working-directory: ./chess_frontend
        run: npm audit --audit-level=high

  # Integration Tests (Optional - for when you have E2E tests)
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-ci]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Start backend
        working-directory: ./chess_backend
        run: |
          python -m venv env
          source env/bin/activate
          pip install -r requirements.txt
          pip install -e .
          uvicorn main:app --host 0.0.0.0 --port 8000 &
          sleep 10

      - name: Build and serve frontend
        working-directory: ./chess_frontend
        run: |
          npm ci
          npm run build
          npx serve -s dist -l 3000 &
          sleep 5

      - name: Run integration tests
        run: |
          # Add your integration tests here
          # For now, just check if services are responding
          curl -f http://localhost:8000/docs || exit 1
          curl -f http://localhost:3000 || exit 1
          echo "Integration tests passed!" 